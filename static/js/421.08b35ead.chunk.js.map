{"version":3,"file":"static/js/421.08b35ead.chunk.js","mappings":"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","sources":["components/Admin/AdminProduct.js","../node_modules/react-use-cart/dist/index.js","../node_modules/react-use-cart/src/useLocalStorage.ts","../node_modules/react-use-cart/src/index.tsx"],"sourcesContent":["import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport AdminNavBar from './AdminNavBar'\r\nimport { Link } from 'react-router-dom';\r\nimport { useCart } from 'react-use-cart/dist';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\nexport default function AdminProduct() {\r\n    const [products, setProducts] = useState([]);\r\n    const [filter, setFilter] = useState('');\r\n    const { totalUniqueItems } = useCart();\r\n\r\n    const searchText = (e) => {\r\n        setFilter(e.target.value);\r\n    }\r\n    let dataSearch = products.filter(item => {\r\n        return Object.keys(item).some(key =>\r\n            item[key].toString().toLowerCase().includes(filter.toString().toLowerCase())\r\n        )\r\n    })\r\n\r\n    useEffect(() => {\r\n        axios.get('http://localhost:3333/Products')\r\n            .then(res => { setProducts(res.data) })\r\n            .catch(error => console.error('Error fetching data:', error))\r\n\r\n    }, []);\r\n\r\n    const handleDeleteProduct = (productId) => {\r\n        if (window.confirm(`Are you sure to delete Id: ${productId} product`)) {\r\n\r\n            // Make a request to your backend to delete the product\r\n            axios.delete(`http://localhost:3333/Products/${productId}`)\r\n                .then(response => {\r\n                    console.log('Product deleted', response.data);\r\n                    // Assuming you want to update the local state as well\r\n                    const updatedProducts = products.filter(product => product.id !== productId);\r\n                    setProducts(updatedProducts);\r\n                    toast.error(`Item with Id :${productId} deleted successfully...!`, { theme: 'colored', autoClose: 2000 })\r\n                })\r\n                .catch(error => console.error('Error deleting product:', error));\r\n        }\r\n\r\n    };\r\n    return (\r\n        <div className='bg-dark'>\r\n            <AdminNavBar />\r\n            <section className=' row py-4 container ms-5 '>\r\n                <div className='bg bg-info d-flex flow justify-content-between  shadow'>\r\n                    <h2 className='text-dark fw-bolder'>Menu items <span class=\"material-symbols-outlined fw-bolder\">menu_book</span></h2>\r\n                    <Link to={'/addfood'} className='btn btn-success fs-5 fw-bolder text-white shadow'>Add Item<span class=\"material-symbols-outlined\">place_item</span></Link>\r\n                </div><br></br>\r\n\r\n                <div className='col-12 mb-5'>\r\n                    <div className='mb-3 col-4 mx-auto text-center shadow'>\r\n                        <label className='form-label h2 text-primary fw-bolder'>Search <span class=\"material-symbols-outlined fw-bolder fs-3\">search</span></label>\r\n                        <input type='text' className='form-control' value={filter} onChange={searchText.bind(this)} placeholder='Search Your Product Here...?' />\r\n                    </div>\r\n                </div>\r\n                <div className='row justify-content-center '>\r\n                    {dataSearch.map(product => {\r\n                        return (\r\n                            <div key={product.id} className='col-lg-3 col-md-6 col-sm-12 ucard'>\r\n                                <div className='card mb-4 bg-warning shadow'>\r\n                                    <img src={product.image} className='card-img-top mx-2 py-2 rounded-circle' alt={product.foodname} style={{ width: 280, height: 180 }} />\r\n                                    <div className='card-body'>\r\n                                        <p className='card-title '><span className=' text-primary fs-3 fw-bolder'>{product.foodname}</span></p>\r\n                                        <p className='card-text'>Quantity : {product.foodqty - totalUniqueItems} </p>\r\n                                        <p className='card-text'> Price : â‚¹ {product.foodprice} /-</p>\r\n                                        <p className='card-text'>Date : {product.date}</p>\r\n                                        <div className='text-center'>\r\n                                            <button className='btn btn-danger' onClick={() => handleDeleteProduct(product.id)}>Delete <span class=\"material-symbols-outlined\">delete</span></button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n\r\n            </section>\r\n            <br />\r\n            <br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />\r\n            <br />\r\n            <ToastContainer />\r\n        </div>\r\n    )\r\n}\r\n","\n'use strict'\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./react-use-cart.cjs.production.min.js')\n} else {\n  module.exports = require('./react-use-cart.cjs.development.js')\n}\n","import * as React from \"react\";\n\nexport default function useLocalStorage(\n  key: string,\n  initialValue: string\n): [string, (value: Function | string) => void] {\n  const [storedValue, setStoredValue] = React.useState(() => {\n    try {\n      const item =\n        typeof window !== \"undefined\" && window.localStorage.getItem(key);\n\n      return item ? item : initialValue;\n    } catch (error) {\n      return initialValue;\n    }\n  });\n\n  const setValue = (value: Function | string) => {\n    try {\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n\n      setStoredValue(valueToStore);\n\n      window.localStorage.setItem(key, valueToStore);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n","import * as React from \"react\";\n\nimport useLocalStorage from \"./useLocalStorage\";\n\nexport interface Item {\n  id: string;\n  price: number;\n  quantity?: number;\n  itemTotal?: number;\n  [key: string]: any;\n}\n\ninterface InitialState {\n  id: string;\n  items: Item[];\n  isEmpty: boolean;\n  totalItems: number;\n  totalUniqueItems: number;\n  cartTotal: number;\n  metadata?: Metadata;\n}\n\nexport interface Metadata {\n  [key: string]: any;\n}\n\ninterface CartProviderState extends InitialState {\n  addItem: (item: Item, quantity?: number) => void;\n  removeItem: (id: Item[\"id\"]) => void;\n  updateItem: (id: Item[\"id\"], payload: object) => void;\n  setItems: (items: Item[]) => void;\n  updateItemQuantity: (id: Item[\"id\"], quantity: number) => void;\n  emptyCart: () => void;\n  getItem: (id: Item[\"id\"]) => any | undefined;\n  inCart: (id: Item[\"id\"]) => boolean;\n  clearCartMetadata: () => void;\n  setCartMetadata: (metadata: Metadata) => void;\n  updateCartMetadata: (metadata: Metadata) => void;\n}\n\nexport type Actions =\n  | { type: \"SET_ITEMS\"; payload: Item[] }\n  | { type: \"ADD_ITEM\"; payload: Item }\n  | { type: \"REMOVE_ITEM\"; id: Item[\"id\"] }\n  | {\n      type: \"UPDATE_ITEM\";\n      id: Item[\"id\"];\n      payload: object;\n    }\n  | { type: \"EMPTY_CART\" }\n  | { type: \"CLEAR_CART_META\" }\n  | { type: \"SET_CART_META\"; payload: Metadata }\n  | { type: \"UPDATE_CART_META\"; payload: Metadata };\n\nexport const initialState: any = {\n  items: [],\n  isEmpty: true,\n  totalItems: 0,\n  totalUniqueItems: 0,\n  cartTotal: 0,\n  metadata: {},\n};\n\nconst CartContext = React.createContext<CartProviderState | undefined>(\n  initialState\n);\n\nexport const createCartIdentifier = (len = 12) =>\n  [...Array(len)].map(() => (~~(Math.random() * 36)).toString(36)).join(\"\");\n\nexport const useCart = () => {\n  const context = React.useContext(CartContext);\n\n  if (!context) throw new Error(\"Expected to be wrapped in a CartProvider\");\n\n  return context;\n};\n\nfunction reducer(state: CartProviderState, action: Actions) {\n  switch (action.type) {\n    case \"SET_ITEMS\":\n      return generateCartState(state, action.payload);\n\n    case \"ADD_ITEM\": {\n      const items = [...state.items, action.payload];\n\n      return generateCartState(state, items);\n    }\n\n    case \"UPDATE_ITEM\": {\n      const items = state.items.map((item: Item) => {\n        if (item.id !== action.id) return item;\n\n        return {\n          ...item,\n          ...action.payload,\n        };\n      });\n\n      return generateCartState(state, items);\n    }\n\n    case \"REMOVE_ITEM\": {\n      const items = state.items.filter((i: Item) => i.id !== action.id);\n\n      return generateCartState(state, items);\n    }\n\n    case \"EMPTY_CART\":\n      return initialState;\n\n    case \"CLEAR_CART_META\":\n      return {\n        ...state,\n        metadata: {},\n      };\n\n    case \"SET_CART_META\":\n      return {\n        ...state,\n        metadata: {\n          ...action.payload,\n        },\n      };\n\n    case \"UPDATE_CART_META\":\n      return {\n        ...state,\n        metadata: {\n          ...state.metadata,\n          ...action.payload,\n        },\n      };\n\n    default:\n      throw new Error(\"No action specified\");\n  }\n}\n\nconst generateCartState = (state = initialState, items: Item[]) => {\n  const totalUniqueItems = calculateUniqueItems(items);\n  const isEmpty = totalUniqueItems === 0;\n\n  return {\n    ...initialState,\n    ...state,\n    items: calculateItemTotals(items),\n    totalItems: calculateTotalItems(items),\n    totalUniqueItems,\n    cartTotal: calculateTotal(items),\n    isEmpty,\n  };\n};\n\nconst calculateItemTotals = (items: Item[]) =>\n  items.map(item => ({\n    ...item,\n    itemTotal: item.price * item.quantity!,\n  }));\n\nconst calculateTotal = (items: Item[]) =>\n  items.reduce((total, item) => total + item.quantity! * item.price, 0);\n\nconst calculateTotalItems = (items: Item[]) =>\n  items.reduce((sum, item) => sum + item.quantity!, 0);\n\nconst calculateUniqueItems = (items: Item[]) => items.length;\n\nexport const CartProvider: React.FC<{\n  children?: React.ReactNode;\n  id?: string;\n  defaultItems?: Item[];\n  onSetItems?: (items: Item[]) => void;\n  onItemAdd?: (payload: Item) => void;\n  onItemUpdate?: (payload: object) => void;\n  onItemRemove?: (id: Item[\"id\"]) => void;\n  storage?: (\n    key: string,\n    initialValue: string\n  ) => [string, (value: Function | string) => void];\n  metadata?: Metadata;\n}> = ({\n  children,\n  id: cartId,\n  defaultItems = [],\n  onSetItems,\n  onItemAdd,\n  onItemUpdate,\n  onItemRemove,\n  storage = useLocalStorage,\n  metadata,\n}) => {\n  const id = cartId ? cartId : createCartIdentifier();\n\n  const [savedCart, saveCart] = storage(\n    cartId ? `react-use-cart-${id}` : `react-use-cart`,\n    JSON.stringify({\n      id,\n      ...initialState,\n      items: defaultItems,\n      metadata,\n    })\n  );\n\n  const [state, dispatch] = React.useReducer(reducer, JSON.parse(savedCart));\n  React.useEffect(() => {\n    saveCart(JSON.stringify(state));\n  }, [state, saveCart]);\n\n  const setItems = (items: Item[]) => {\n    dispatch({\n      type: \"SET_ITEMS\",\n      payload: items.map(item => ({\n        ...item,\n        quantity: item.quantity || 1,\n      })),\n    });\n\n    onSetItems && onSetItems(items);\n  };\n\n  const addItem = (item: Item, quantity = 1) => {\n    if (!item.id) throw new Error(\"You must provide an `id` for items\");\n    if (quantity <= 0) return;\n\n    const currentItem = state.items.find((i: Item) => i.id === item.id);\n\n    if (!currentItem && !item.hasOwnProperty(\"price\"))\n      throw new Error(\"You must pass a `price` for new items\");\n\n    if (!currentItem) {\n      const payload = { ...item, quantity };\n\n      dispatch({ type: \"ADD_ITEM\", payload });\n\n      onItemAdd && onItemAdd(payload);\n\n      return;\n    }\n\n    const payload = { ...item, quantity: currentItem.quantity + quantity };\n\n    dispatch({\n      type: \"UPDATE_ITEM\",\n      id: item.id,\n      payload,\n    });\n\n    onItemUpdate && onItemUpdate(payload);\n  };\n\n  const updateItem = (id: Item[\"id\"], payload: object) => {\n    if (!id || !payload) {\n      return;\n    }\n\n    dispatch({ type: \"UPDATE_ITEM\", id, payload });\n\n    onItemUpdate && onItemUpdate(payload);\n  };\n\n  const updateItemQuantity = (id: Item[\"id\"], quantity: number) => {\n    if (quantity <= 0) {\n      onItemRemove && onItemRemove(id);\n\n      dispatch({ type: \"REMOVE_ITEM\", id });\n\n      return;\n    }\n\n    const currentItem = state.items.find((item: Item) => item.id === id);\n\n    if (!currentItem) throw new Error(\"No such item to update\");\n\n    const payload = { ...currentItem, quantity };\n\n    dispatch({\n      type: \"UPDATE_ITEM\",\n      id,\n      payload,\n    });\n\n    onItemUpdate && onItemUpdate(payload);\n  };\n\n  const removeItem = (id: Item[\"id\"]) => {\n    if (!id) return;\n\n    dispatch({ type: \"REMOVE_ITEM\", id });\n\n    onItemRemove && onItemRemove(id);\n  };\n\n  const emptyCart = () =>\n    dispatch({\n      type: \"EMPTY_CART\",\n    });\n\n  const getItem = (id: Item[\"id\"]) =>\n    state.items.find((i: Item) => i.id === id);\n\n  const inCart = (id: Item[\"id\"]) => state.items.some((i: Item) => i.id === id);\n\n  const clearCartMetadata = () => {\n    dispatch({\n      type: \"CLEAR_CART_META\",\n    });\n  };\n\n  const setCartMetadata = (metadata: Metadata) => {\n    if (!metadata) return;\n\n    dispatch({\n      type: \"SET_CART_META\",\n      payload: metadata,\n    });\n  };\n\n  const updateCartMetadata = (metadata: Metadata) => {\n    if (!metadata) return;\n\n    dispatch({\n      type: \"UPDATE_CART_META\",\n      payload: metadata,\n    });\n  };\n\n  return (\n    <CartContext.Provider\n      value={{\n        ...state,\n        getItem,\n        inCart,\n        setItems,\n        addItem,\n        updateItem,\n        updateItemQuantity,\n        removeItem,\n        emptyCart,\n        clearCartMetadata,\n        setCartMetadata,\n        updateCartMetadata,\n      }}\n    >\n      {children}\n    </CartContext.Provider>\n  );\n};\n"],"names":["AdminProduct","products","setProducts","useState","filter","setFilter","totalUniqueItems","useCart","dataSearch","item","Object","keys","some","key","toString","toLowerCase","includes","useEffect","axios","get","then","res","data","catch","error","console","_jsxs","className","children","_jsx","AdminNavBar","class","Link","to","type","value","onChange","e","target","bind","this","placeholder","map","product","src","image","alt","foodname","style","width","height","foodqty","foodprice","date","onClick","handleDeleteProduct","productId","id","window","confirm","concat","delete","response","log","updatedProducts","toast","theme","autoClose","ToastContainer","module","exports","r","n","t","localStorage","getItem","a","i","Function","setItem","items","isEmpty","totalItems","cartTotal","metadata","createContext","Array","Math","random","join","o","u","payload","Error","f","c","s","d","itemTotal","price","quantity","reduce","length","useContext"],"sourceRoot":""}